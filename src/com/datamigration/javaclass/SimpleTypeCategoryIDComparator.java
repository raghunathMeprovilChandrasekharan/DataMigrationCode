//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.16 at 12:14:50 pm IST 
//


package com.datamigration.javaclass;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for simpleType.CategoryIDComparator.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="simpleType.CategoryIDComparator">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="is equal"/>
 *     &lt;enumeration value="is direct child of"/>
 *     &lt;enumeration value="is child of"/>
 *     &lt;enumeration value="is direct parent of"/>
 *     &lt;enumeration value="is parent of"/>
 *     &lt;enumeration value="is sibling of"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "simpleType.CategoryIDComparator")
@XmlEnum
public enum SimpleTypeCategoryIDComparator {

    @XmlEnumValue("is equal")
    IS_EQUAL("is equal"),
    @XmlEnumValue("is direct child of")
    IS_DIRECT_CHILD_OF("is direct child of"),
    @XmlEnumValue("is child of")
    IS_CHILD_OF("is child of"),
    @XmlEnumValue("is direct parent of")
    IS_DIRECT_PARENT_OF("is direct parent of"),
    @XmlEnumValue("is parent of")
    IS_PARENT_OF("is parent of"),
    @XmlEnumValue("is sibling of")
    IS_SIBLING_OF("is sibling of");
    private final String value;

    SimpleTypeCategoryIDComparator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SimpleTypeCategoryIDComparator fromValue(String v) {
        for (SimpleTypeCategoryIDComparator c: SimpleTypeCategoryIDComparator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
