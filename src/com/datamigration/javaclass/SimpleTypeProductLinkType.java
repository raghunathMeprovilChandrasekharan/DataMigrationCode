//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.16 at 12:14:50 pm IST 
//


package com.datamigration.javaclass;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for simpleType.Product.LinkType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="simpleType.Product.LinkType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="cross-sell"/>
 *     &lt;enumeration value="replacement"/>
 *     &lt;enumeration value="up-sell"/>
 *     &lt;enumeration value="accessory"/>
 *     &lt;enumeration value="spare-part"/>
 *     &lt;enumeration value="newer-version"/>
 *     &lt;enumeration value="alt-orderunit"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "simpleType.Product.LinkType")
@XmlEnum
public enum SimpleTypeProductLinkType {

    @XmlEnumValue("cross-sell")
    CROSS_SELL("cross-sell"),
    @XmlEnumValue("replacement")
    REPLACEMENT("replacement"),
    @XmlEnumValue("up-sell")
    UP_SELL("up-sell"),
    @XmlEnumValue("accessory")
    ACCESSORY("accessory"),
    @XmlEnumValue("spare-part")
    SPARE_PART("spare-part"),
    @XmlEnumValue("newer-version")
    NEWER_VERSION("newer-version"),
    @XmlEnumValue("alt-orderunit")
    ALT_ORDERUNIT("alt-orderunit"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    SimpleTypeProductLinkType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SimpleTypeProductLinkType fromValue(String v) {
        for (SimpleTypeProductLinkType c: SimpleTypeProductLinkType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
