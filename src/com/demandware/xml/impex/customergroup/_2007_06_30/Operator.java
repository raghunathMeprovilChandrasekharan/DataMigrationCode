//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.28 at 10:48:34 pm IST 
//


package com.demandware.xml.impex.customergroup._2007_06_30;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Operator.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Operator">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="is-equal"/>
 *     &lt;enumeration value="is-not-equal"/>
 *     &lt;enumeration value="exists"/>
 *     &lt;enumeration value="does-not-exist"/>
 *     &lt;enumeration value="is-on"/>
 *     &lt;enumeration value="is-after"/>
 *     &lt;enumeration value="is-before"/>
 *     &lt;enumeration value="is-today"/>
 *     &lt;enumeration value="is-tomorrow"/>
 *     &lt;enumeration value="is-yesterday"/>
 *     &lt;enumeration value="is-in-the-last"/>
 *     &lt;enumeration value="is-in-the-next"/>
 *     &lt;enumeration value="is-in-the-current"/>
 *     &lt;enumeration value="is-in-the-last-x-days"/>
 *     &lt;enumeration value="is-not-in-the-last-x-days"/>
 *     &lt;enumeration value="is-in-the-next-x-days"/>
 *     &lt;enumeration value="is-not-in-the-next-x-days"/>
 *     &lt;enumeration value="is-greater-than"/>
 *     &lt;enumeration value="is-less-than"/>
 *     &lt;enumeration value="is-greater-than-or-equal"/>
 *     &lt;enumeration value="is-less-than-or-equal"/>
 *     &lt;enumeration value="is-in-range"/>
 *     &lt;enumeration value="is-not-in-range"/>
 *     &lt;enumeration value="starts-with"/>
 *     &lt;enumeration value="ends-with"/>
 *     &lt;enumeration value="contains"/>
 *     &lt;enumeration value="does-not-contain"/>
 *     &lt;enumeration value="is-true"/>
 *     &lt;enumeration value="is-false"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Operator")
@XmlEnum
public enum Operator {

    @XmlEnumValue("is-equal")
    IS_EQUAL("is-equal"),
    @XmlEnumValue("is-not-equal")
    IS_NOT_EQUAL("is-not-equal"),
    @XmlEnumValue("exists")
    EXISTS("exists"),
    @XmlEnumValue("does-not-exist")
    DOES_NOT_EXIST("does-not-exist"),
    @XmlEnumValue("is-on")
    IS_ON("is-on"),
    @XmlEnumValue("is-after")
    IS_AFTER("is-after"),
    @XmlEnumValue("is-before")
    IS_BEFORE("is-before"),
    @XmlEnumValue("is-today")
    IS_TODAY("is-today"),
    @XmlEnumValue("is-tomorrow")
    IS_TOMORROW("is-tomorrow"),
    @XmlEnumValue("is-yesterday")
    IS_YESTERDAY("is-yesterday"),
    @XmlEnumValue("is-in-the-last")
    IS_IN_THE_LAST("is-in-the-last"),
    @XmlEnumValue("is-in-the-next")
    IS_IN_THE_NEXT("is-in-the-next"),
    @XmlEnumValue("is-in-the-current")
    IS_IN_THE_CURRENT("is-in-the-current"),
    @XmlEnumValue("is-in-the-last-x-days")
    IS_IN_THE_LAST_X_DAYS("is-in-the-last-x-days"),
    @XmlEnumValue("is-not-in-the-last-x-days")
    IS_NOT_IN_THE_LAST_X_DAYS("is-not-in-the-last-x-days"),
    @XmlEnumValue("is-in-the-next-x-days")
    IS_IN_THE_NEXT_X_DAYS("is-in-the-next-x-days"),
    @XmlEnumValue("is-not-in-the-next-x-days")
    IS_NOT_IN_THE_NEXT_X_DAYS("is-not-in-the-next-x-days"),
    @XmlEnumValue("is-greater-than")
    IS_GREATER_THAN("is-greater-than"),
    @XmlEnumValue("is-less-than")
    IS_LESS_THAN("is-less-than"),
    @XmlEnumValue("is-greater-than-or-equal")
    IS_GREATER_THAN_OR_EQUAL("is-greater-than-or-equal"),
    @XmlEnumValue("is-less-than-or-equal")
    IS_LESS_THAN_OR_EQUAL("is-less-than-or-equal"),
    @XmlEnumValue("is-in-range")
    IS_IN_RANGE("is-in-range"),
    @XmlEnumValue("is-not-in-range")
    IS_NOT_IN_RANGE("is-not-in-range"),
    @XmlEnumValue("starts-with")
    STARTS_WITH("starts-with"),
    @XmlEnumValue("ends-with")
    ENDS_WITH("ends-with"),
    @XmlEnumValue("contains")
    CONTAINS("contains"),
    @XmlEnumValue("does-not-contain")
    DOES_NOT_CONTAIN("does-not-contain"),
    @XmlEnumValue("is-true")
    IS_TRUE("is-true"),
    @XmlEnumValue("is-false")
    IS_FALSE("is-false");
    private final String value;

    Operator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Operator fromValue(String v) {
        for (Operator c: Operator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
